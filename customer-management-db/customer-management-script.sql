-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-06-08 00:26:26 CST
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

alter session set current_schema = system;

CREATE TABLE account (
    id                INTEGER NOT NULL,
    "number"          VARCHAR2(100) NOT NULL,
    opening_amount    NUMBER(10, 4) NOT NULL,
    balance            NUMBER(10, 4),
    customer_id       INTEGER NOT NULL,
    account_type_id   INTEGER NOT NULL,
    current_status_id INTEGER
);
LOGGING;

COMMENT ON COLUMN account.id IS
    'account id';

COMMENT ON COLUMN account.opening_amount IS
    'apoening amount';

COMMENT ON COLUMN account.amount IS
    'current account mount';

COMMENT ON COLUMN account.customer_id IS
    'account owner';

COMMENT ON COLUMN account.account_type_id IS
    'account type ';

COMMENT ON COLUMN account.current_status_id IS
    'current status account';

ALTER TABLE account ADD CONSTRAINT account_pk PRIMARY KEY ( id );

CREATE TABLE account_status (
    id   INTEGER NOT NULL,
    code VARCHAR2(100),
    name VARCHAR2(100)
)
LOGGING;

ALTER TABLE account_status ADD CONSTRAINT account_status_pk PRIMARY KEY ( id );

ALTER TABLE account_status ADD CONSTRAINT account_status_code_un UNIQUE ( code );

CREATE TABLE account_status_hist (
    id                INTEGER NOT NULL,
    reason            VARCHAR2(200),
    account_status_id INTEGER NOT NULL,
    account_id        INTEGER NOT NULL
)
LOGGING;

ALTER TABLE account_status_hist ADD CONSTRAINT account_status_hist PRIMARY KEY ( id );

CREATE TABLE account_type (
    id   INTEGER NOT NULL,
    code VARCHAR2(100),
    name VARCHAR2(100)
)
LOGGING;

ALTER TABLE account_type ADD CONSTRAINT account_type_pk PRIMARY KEY ( id );

ALTER TABLE account_type ADD CONSTRAINT account_type_code_un UNIQUE ( code );

CREATE TABLE "check" (
    id                INTEGER NOT NULL,
    "number"          INTEGER,
    amount            NUMBER(10, 4),
    checkbook_id      INTEGER NOT NULL,
    current_status_id INTEGER
)
LOGGING;

ALTER TABLE "check" ADD CONSTRAINT check_pk PRIMARY KEY ( id );

CREATE TABLE check_status (
    id   INTEGER NOT NULL,
    code VARCHAR2(100),
    name VARCHAR2(100)
)
LOGGING;

ALTER TABLE check_status ADD CONSTRAINT table_11_pk PRIMARY KEY ( id );

ALTER TABLE check_status ADD CONSTRAINT check_status_code_un UNIQUE ( code );

CREATE TABLE check_status_hist (
    id              INTEGER NOT NULL,
    reason          VARCHAR2(200),
    check_id        INTEGER NOT NULL,
    check_status_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE check_status_hist ADD CONSTRAINT check_status_hist_pk PRIMARY KEY ( id );

CREATE TABLE checkbook (
    id                INTEGER NOT NULL,
	"number"          VARCHAR2(100) NOT NULL,
    check_quantity    INTEGER,
    account_id        INTEGER NOT NULL,
    current_status_id INTEGER
)
LOGGING;

ALTER TABLE checkbook ADD CONSTRAINT checkbook_pk PRIMARY KEY ( id );

CREATE TABLE checkbook_status (
    id   INTEGER NOT NULL,
    code VARCHAR2(100),
    name VARCHAR2(100)
)
LOGGING;

ALTER TABLE checkbook_status ADD CONSTRAINT checkbook_status_pk PRIMARY KEY ( id );

ALTER TABLE checkbook_status ADD CONSTRAINT checkbook_status_code_un UNIQUE ( code );

CREATE TABLE checkbook_status_hist (
    id                  INTEGER NOT NULL,
    reason              VARCHAR2(200),
    checkbook_id        INTEGER NOT NULL,
    checkbook_status_id INTEGER NOT NULL
)
LOGGING;

ALTER TABLE checkbook_status_hist ADD CONSTRAINT checkbook_status_hist_pk PRIMARY KEY ( id );

CREATE TABLE customer (
    id             INTEGER NOT NULL,
    name           VARCHAR2(100) NOT NULL,
    lastname       VARCHAR2(100) NOT NULL,
    identification VARCHAR2(50) NOT NULL,
    birthdate      DATE,
    email          VARCHAR2(200),
    phone          VARCHAR2(12),
    disabled       NUMBER DEFAULT 0 NULL
)
LOGGING;

ALTER TABLE customer ADD CONSTRAINT customer_pk PRIMARY KEY ( id );

ALTER TABLE customer ADD CONSTRAINT customer_identification_un UNIQUE ( identification );

ALTER TABLE account
    ADD CONSTRAINT account_account_status_hist_fk FOREIGN KEY ( current_status_id )
        REFERENCES account_status_hist ( id )
    NOT DEFERRABLE;

ALTER TABLE account
    ADD CONSTRAINT account_account_type_fk FOREIGN KEY ( account_type_id )
        REFERENCES account_type ( id )
    NOT DEFERRABLE;

ALTER TABLE account
    ADD CONSTRAINT account_customer_fk FOREIGN KEY ( customer_id )
        REFERENCES customer ( id )
    NOT DEFERRABLE;

ALTER TABLE account_status_hist
    ADD CONSTRAINT account_status_hist_account_fk FOREIGN KEY ( account_id )
        REFERENCES account ( id )
    NOT DEFERRABLE;

ALTER TABLE "check"
    ADD CONSTRAINT check_check_status_hist_fk FOREIGN KEY ( current_status_id )
        REFERENCES check_status_hist ( id )
    NOT DEFERRABLE;

ALTER TABLE "check"
    ADD CONSTRAINT check_checkbook_fk FOREIGN KEY ( checkbook_id )
        REFERENCES checkbook ( id )
    NOT DEFERRABLE;

ALTER TABLE check_status_hist
    ADD CONSTRAINT check_status_hist_check_fk FOREIGN KEY ( check_id )
        REFERENCES "check" ( id )
    NOT DEFERRABLE;

ALTER TABLE check_status_hist
    ADD CONSTRAINT check_status_hist_check_fkv2 FOREIGN KEY ( check_status_id )
        REFERENCES check_status ( id )
    NOT DEFERRABLE;

ALTER TABLE checkbook
    ADD CONSTRAINT checkbook_account_fk FOREIGN KEY ( account_id )
        REFERENCES account ( id )
    NOT DEFERRABLE;

ALTER TABLE checkbook
    ADD CONSTRAINT checkbook_status_hist_fk FOREIGN KEY ( current_status_id )
        REFERENCES checkbook_status_hist ( id )
    NOT DEFERRABLE;

ALTER TABLE checkbook_status_hist
    ADD CONSTRAINT hist_checkbook_fk FOREIGN KEY ( checkbook_id )
        REFERENCES checkbook ( id )
    NOT DEFERRABLE;

ALTER TABLE account_status_hist
    ADD CONSTRAINT status_hist_account_status_fk FOREIGN KEY ( account_status_id )
        REFERENCES account_status ( id )
    NOT DEFERRABLE;

ALTER TABLE checkbook_status_hist
    ADD CONSTRAINT status_hist_checkbook_fk FOREIGN KEY ( checkbook_status_id )
        REFERENCES checkbook_status ( id )
    NOT DEFERRABLE;

CREATE SEQUENCE account_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER account_id_trg BEFORE
    INSERT ON account
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := account_id_seq.nextval;
END;
/

CREATE SEQUENCE account_status_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER account_status_id_trg BEFORE
    INSERT ON account_status
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := account_status_id_seq.nextval;
END;
/

CREATE SEQUENCE account_status_hist_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER account_status_hist_id_trg BEFORE
    INSERT ON account_status_hist
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := account_status_hist_id_seq.nextval;
END;
/

CREATE SEQUENCE account_type_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER account_type_id_trg BEFORE
    INSERT ON account_type
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := account_type_id_seq.nextval;
END;
/

CREATE SEQUENCE check_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER check_id_trg BEFORE
    INSERT ON "check"
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := check_id_seq.nextval;
END;
/

CREATE SEQUENCE check_status_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER check_status_id_trg BEFORE
    INSERT ON check_status
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := check_status_id_seq.nextval;
END;
/

CREATE SEQUENCE check_status_hist_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER check_status_hist_id_trg BEFORE
    INSERT ON check_status_hist
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := check_status_hist_id_seq.nextval;
END;
/

CREATE SEQUENCE checkbook_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER checkbook_id_trg BEFORE
    INSERT ON checkbook
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := checkbook_id_seq.nextval;
END;
/

CREATE SEQUENCE checkbook_status_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER checkbook_status_id_trg BEFORE
    INSERT ON checkbook_status
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := checkbook_status_id_seq.nextval;
END;
/

CREATE SEQUENCE checkbook_status_hist_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER checkbook_status_hist_id_trg BEFORE
    INSERT ON checkbook_status_hist
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := checkbook_status_hist_id_seq.nextval;
END;
/

CREATE SEQUENCE customer_id_seq START WITH 1 NOCACHE ORDER;

CREATE OR REPLACE TRIGGER customer_id_trg BEFORE
    INSERT ON customer
    FOR EACH ROW
    WHEN ( new.id IS NULL )
BEGIN
    :new.id := customer_id_seq.nextval;
END;
/

-- inser types
INSERT INTO ACCOUNT_TYPE(CODE, NAME) VALUES('monetaria', 'Monetaria');
INSERT INTO ACCOUNT_TYPE(CODE, NAME) VALUES('ahorros', 'Ahorros');

INSERT INTO ACCOUNT_STATUS(CODE, NAME) VALUES('activa','Activa');
INSERT INTO ACCOUNT_STATUS(CODE, NAME) VALUES('bloqueada','Bloqueada');
INSERT INTO ACCOUNT_STATUS(CODE, NAME) VALUES('suspendida','Suspendida');

INSERT INTO CHECKBOOK_STATUS(CODE, NAME) VALUES('activa','Activa');
INSERT INTO CHECKBOOK_STATUS(CODE, NAME) VALUES('bloqueada','Bloqueada');
INSERT INTO CHECKBOOK_STATUS(CODE, NAME) VALUES('finalizada','Finalizada');

INSERT INTO CHECK_STATUS(CODE, NAME) VALUES('activo','Activo');
INSERT INTO CHECK_STATUS(CODE, NAME) VALUES('bloqueado','Bloqueado');
INSERT INTO CHECK_STATUS(CODE, NAME) VALUES('cobrado','Cobrado');


-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             0
-- ALTER TABLE                             29
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                          11
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                         11
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
